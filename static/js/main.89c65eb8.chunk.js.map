{"version":3,"sources":["components/Join/Join.js","components/AdminView/AdminView.js","components/PlayerView/PlayerView.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","form","width","submit","margin","Join","socket","setActivePlayer","classes","useState","nicknameInput","setNicknameInput","roomInput","setRoomInput","nicknameError","setNicknameError","roomError","setRoomError","useEffect","on","newPlayer","Container","component","maxWidth","CssBaseline","className","Typography","variant","onSubmit","e","preventDefault","emit","noValidate","TextField","error","helperText","required","fullWidth","id","label","name","autoFocus","value","onChange","target","Button","type","color","root","height","list","title","flexGrow","rootToolbar","AdminView","playersInRoom","activePlayer","playersNoAdmin","filter","player","isAdmin","admin","find","handlePlaySound","currentTarget","AppBar","position","Toolbar","Grid","container","item","xs","sm","Paper","room","List","map","ListItem","ListItemIcon","ListItemText","primary","Divider","elevation","square","button","onClick","PlayerView","App","io","setPlayersInRoom","players","sound","URL","Audio","play","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.89c65eb8.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nconst Join = ({ socket, setActivePlayer }) => {\r\n  const classes = useStyles();\r\n  const [nicknameInput, setNicknameInput] = useState(\"\");\r\n  const [roomInput, setRoomInput] = useState(\"\");\r\n  const [nicknameError, setNicknameError] = useState(\"\");\r\n  const [roomError, setRoomError] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    socket.on(\"enterRoom\", (newPlayer) => {\r\n      setActivePlayer(newPlayer);\r\n    });\r\n\r\n    socket.on(\"errorParticipantName\", () => {\r\n      setNicknameError(\"Choose another name\");\r\n    });\r\n  }, []);\r\n\r\n  const handleNicknameChange = (e) => {\r\n    setNicknameInput(e.target.value);\r\n  };\r\n\r\n  const handleRoomChange = (e) => {\r\n    setRoomInput(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    nicknameInput\r\n      ? setNicknameError(\"\")\r\n      : setNicknameError(\"Nickname is required\");\r\n    roomInput ? setRoomError(\"\") : setRoomError(\"Room is required\");\r\n    if (nicknameInput && roomInput) {\r\n      socket.emit(\"join\", nicknameInput, roomInput);\r\n      setNicknameInput(\"\");\r\n      setRoomInput(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline>\r\n        <div className={classes.paper}></div>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Enter or create a room!\r\n        </Typography>\r\n        <form onSubmit={handleSubmit} className={classes.form} noValidate>\r\n          <TextField\r\n            error={nicknameError}\r\n            helperText={nicknameError}\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"nickname\"\r\n            label=\"Nickname\"\r\n            name=\"nickname\"\r\n            autoFocus\r\n            value={nicknameInput}\r\n            onChange={handleNicknameChange}\r\n          />\r\n          <TextField\r\n            error={roomError}\r\n            helperText={roomError}\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"room\"\r\n            label=\"Room\"\r\n            id=\"room\"\r\n            value={roomInput}\r\n            onChange={handleRoomChange}\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Enter\r\n          </Button>\r\n        </form>\r\n      </CssBaseline>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Join;\r\n","import CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport VolumeUpIcon from \"@material-ui/icons/VolumeUp\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport EmojiPeopleIcon from \"@material-ui/icons/EmojiPeople\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: \"100vh\",\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  list: {\r\n    alignItems: \"center\",\r\n    marginTop: theme.spacing(8),\r\n  },\r\n  form: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  rootToolbar: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nconst AdminView = ({ playersInRoom, socket, activePlayer }) => {\r\n  const classes = useStyles();\r\n\r\n  const playersNoAdmin = playersInRoom.filter((player) => !player.isAdmin);\r\n  const admin = playersInRoom.find((player) => player.isAdmin);\r\n\r\n  const playersList = () =>\r\n    playersNoAdmin.map((player) => (\r\n      <>\r\n        <ListItem>\r\n          <ListItemIcon>\r\n            <EmojiPeopleIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary={player.name} />\r\n        </ListItem>{\" \"}\r\n        <Divider />\r\n      </>\r\n    ));\r\n\r\n  const handlePlaySound = (e) => {\r\n    const type = e.currentTarget.id;\r\n    socket.emit(\"sound\", activePlayer, `${type}.wav`);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={classes.rootToolbar}>\r\n        <AppBar position=\"static\">\r\n          <Toolbar>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              Welcome {admin.name}!\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </div>\r\n      <Grid container component=\"main\" className={classes.root}>\r\n        <CssBaseline />\r\n        <Grid item xs={12} sm={6} component={Paper}>\r\n          <Container component=\"main\" maxWidth=\"xs\" className={classes.list}>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n              People in the room {admin.room}:\r\n            </Typography>\r\n            <List>{playersList()}</List>\r\n          </Container>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6} component={Paper} elevation={6} square>\r\n          <Container component=\"main\" maxWidth=\"xs\" className={classes.list}>\r\n            <List>\r\n              <ListItem button id=\"dobra-odpowiedz\" onClick={handlePlaySound}>\r\n                <ListItemIcon>\r\n                  <VolumeUpIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Correct answer\" />\r\n              </ListItem>\r\n              <ListItem button id=\"zla-odpowiedz\" onClick={handlePlaySound}>\r\n                <ListItemIcon>\r\n                  <VolumeUpIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Wrong answer\" />\r\n              </ListItem>\r\n              <ListItem button id=\"nastepna-runda\" onClick={handlePlaySound}>\r\n                <ListItemIcon>\r\n                  <VolumeUpIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Next round\" />\r\n              </ListItem>\r\n              <ListItem\r\n                button\r\n                id=\"zegnaj-z-teleturnieju\"\r\n                onClick={handlePlaySound}\r\n              >\r\n                <ListItemIcon>\r\n                  <VolumeUpIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Eliminate player\" />\r\n              </ListItem>\r\n            </List>\r\n          </Container>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdminView;\r\n","import CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nconst PlayerView = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline>\r\n      <Typography component=\"h1\" variant=\"h5\" className={classes.paper}>\r\n          Wait for sounds!\r\n        </Typography>\r\n      </CssBaseline>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default PlayerView;\r\n","import { useState, useEffect } from \"react\";\nimport { io } from \"socket.io-client\";\n\nimport \"./App.css\";\nimport Join from \"./components/Join/Join\";\nimport AdminView from \"./components/AdminView/AdminView\";\nimport PlayerView from \"./components/PlayerView/PlayerView\";\n\nfunction App() {\n  const socket = io(\"https://playsound-backend.herokuapp.com/\");\n  const [activePlayer, setActivePlayer] = useState(null);\n  const [playersInRoom, setPlayersInRoom] = useState([]);\n\n  useEffect(() => {\n    socket.on(\"newPlayer\", (players) => {\n      setPlayersInRoom(players);\n    });\n\n    socket.on(\"newSound\", (sound) => {\n      let URL\n      if (sound === \"dobra-odpowiedz.wav\") {\n        URL = \"https://docs.google.com/uc?export=download&id=1qVJyF-KQN9Bmn_lqTU-TzsgFUzJ6jc25?fbclid\"\n      }\n      const audio = new Audio(URL);\n      audio.play();\n    })\n  }, []);\n\n  return (\n    <div className=\"App\">\n      {!activePlayer && (\n        <Join\n          socket={socket}\n          setActivePlayer={setActivePlayer}\n          playersInRoom={playersInRoom}\n        />\n      )}\n      {activePlayer && activePlayer.isAdmin && (\n        <AdminView\n          playersInRoom={playersInRoom}\n          socket={socket}\n          activePlayer={activePlayer}\n        />\n      )}\n      {activePlayer && !activePlayer.isAdmin && <PlayerView socket={socket} />}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}